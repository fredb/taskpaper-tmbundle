<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

if ENV['TM_SELECTED_TEXT']
  toggled_text = STDIN.read
  unless toggled_text =~ /^(\s*-.*)(\({1}@done.*\){1}|[^\(]@done.*).*$/  # Any pendings? Then add @done!
    toggled_text.gsub!(/^(.*)($\n)/) { $1 + ' @done' + $2 }
  else  # remove @done for all!
    toggled_text.gsub!(/^(\s*-.*)(\({1}@done.*\){1}|[^\(]@done.*).*$/) { $1 }
  end
  print '${0:' + toggled_text + '}'  # Wrap in selection
else
  if ENV['TM_CURRENT_LINE'] =~ /^(\s*-.*)(\({1}@done.*\){1}|[^\(]@done.*).*$/
    line = ENV['TM_CURRENT_LINE'].gsub(/^(\s*-.*)(\({1}@done.*\){1}|[^\(]@done.*).*$/) { $1 }
  else
    line = ENV['TM_CURRENT_LINE'] + ' @done'
  end
  print line
end</string>
	<key>fallbackInput</key>
	<string>line</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>@d</string>
	<key>name</key>
	<string>Toggle Completed</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.plain.tasks</string>
	<key>uuid</key>
	<string>9723EA9D-B0BB-4E7A-A33A-957B12E707EE</string>
</dict>
</plist>
